    ##
    # Connection header for WebSocket reverse proxy
    ##
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $http_ssl_cipher $forwarded_ssl_cipher {
        "" $ssl_cipher;  # Si no existe, usa $ssl_cipher
        default $http_ssl_cipher;
    }

    map $http_ssl_client_cert $forwarded_ssl_client_cert {
        "" $ssl_client_escaped_cert;
        default $http_ssl_client_cert;
    }

    map $http_ssl_client_i_dn $forwarded_ssl_client_i_dn {
        "" $ssl_client_i_dn;
        default $http_ssl_client_i_dn;
    }

    map $http_ssl_client_s_dn $forwarded_ssl_client_s_dn {
        "" $ssl_client_s_dn;
        default $http_ssl_client_s_dn;
    }

    map $http_ssl_client_v_end $forwarded_ssl_client_v_end {
        "" $ssl_client_v_end;
        default $http_ssl_client_v_end;
    }

    map $http_ssl_client_v_remain $forwarded_ssl_client_v_remain {
        "" $ssl_client_v_remain;
        default $http_ssl_client_v_remain;
    }

    map $http_ssl_client_v_start $forwarded_ssl_client_v_start {
        "" $ssl_client_v_start;
        default $http_ssl_client_v_start;
    }

    map $http_ssl_protocol $forwarded_ssl_protocol {
        "" $ssl_protocol;
        default $http_ssl_protocol;
    }

    map $http_ssl_client_verify $forwarded_ssl_client_verify {
        "" $ssl_client_verify;
        default $http_ssl_client_verify;
    }

    map $http_ssl_server_s_dn $forwarded_ssl_server_s_dn {
        "" $ssl_server_name;
        default $http_ssl_server_s_dn;
    }
