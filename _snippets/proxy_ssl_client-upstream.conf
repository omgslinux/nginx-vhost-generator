# Snippet to be included in a reverse proxy server to catch the custom SSL_* headers
# (which will be seen as HTTP_SSL_* in the upstream) during the SSL verification process
# performed in the same proxy server, These headers should be transformed back
# to SSL_ for the web app, by using the corresponding
# $http_* variables generated by nginx. The web app should take care of
# SSL_* headers only.

# This is to prevent a warning about the bucket size
#proxy_headers_hash_bucket_size 128;

# And the set of headers, trying to mimic as much as possible the same headers
# that Apache generates via StdEnvVars and ExportCertData options in a SSLOptions directive

proxy_set_header SSL-CIPHER $forwarded_ssl_cipher;
proxy_set_header SSL-CLIENT-CERT $forwarded_ssl_client_cert;
proxy_set_header SSL-CLIENT-I-DN $forwarded_ssl_client_i_dn;
proxy_set_header SSL-CLIENT-S-DN $forwarded_ssl_client_s_dn;
proxy_set_header SSL-CLIENT-V-END $forwarded_ssl_client_v_end;
proxy_set_header SSL-CLIENT-V-REMAIN $forwarded_ssl_client_v_remain;
proxy_set_header SSL-CLIENT-V-START $forwarded_ssl_client_v_start;
proxy_set_header SSL-CLIENT-VERIFY $forwarded_ssl_client_verify; # “SUCCESS”, “FAILED:reason”, and “NONE”
proxy_set_header SSL-PROTOCOL $forwarded_ssl_protocol;
proxy_set_header SSL-SERVER-S-DN $forwarded_ssl_server_s_dn;
